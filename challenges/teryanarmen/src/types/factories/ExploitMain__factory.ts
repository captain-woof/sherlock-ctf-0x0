/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { ExploitMain, ExploitMainInterface } from "../ExploitMain";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_challenge",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "exploit",
    outputs: [
      {
        internalType: "contract ExploitHelper",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "finalize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "";

type ExploitMainConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ExploitMainConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ExploitMain__factory extends ContractFactory {
  constructor(...args: ExploitMainConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
    this.contractName = "ExploitMain";
  }

  deploy(
    _challenge: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ExploitMain> {
    return super.deploy(_challenge, overrides || {}) as Promise<ExploitMain>;
  }
  getDeployTransaction(
    _challenge: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_challenge, overrides || {});
  }
  attach(address: string): ExploitMain {
    return super.attach(address) as ExploitMain;
  }
  connect(signer: Signer): ExploitMain__factory {
    return super.connect(signer) as ExploitMain__factory;
  }
  static readonly contractName: "ExploitMain";
  public readonly contractName: "ExploitMain";
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ExploitMainInterface {
    return new utils.Interface(_abi) as ExploitMainInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ExploitMain {
    return new Contract(address, _abi, signerOrProvider) as ExploitMain;
  }
}
